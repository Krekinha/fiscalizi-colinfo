<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MDFast.Design"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" xmlns:Views="clr-namespace:MDFast.Views"
                    mc:Ignorable="d" 
                    >

    <ControlTemplate x:Key="ErrorTemplateSilverlightStyle">
        <StackPanel Orientation="Horizontal">
            <!-- Define o contorno da borda do TextBox -->
            <Grid>
                <!-- Define o toolTipCorner -->
                <Polygon x:Name="toolTipCorner"
                                 Panel.ZIndex="2"
                                 Margin="-1"
                                 Points="7,7 7,0 0,0"
                                 Fill="#FFDC000C"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Top"
                                 IsHitTestVisible="True"/>
                <!-- Define a linha branca que separa o toolTipCorner -->
                <Polyline Panel.ZIndex="3"
                                  Points="10,10 0,0"
                                  Margin="0,-2,-2.917,0"
                                  HorizontalAlignment="Right"
                                  StrokeThickness="1.5"
                                  StrokeEndLineCap="Round"
                                  StrokeStartLineCap="Round"
                                  Stroke="White"
                                  VerticalAlignment="Top"
                                  IsHitTestVisible="True" 
                                  d:LayoutOverrides="VerticalAlignment"/>
                <AdornedElementPlaceholder x:Name="adorner"/>
            </Grid>
            <!-- Defines the Popup -->
            <Popup x:Name="placard"
                   AllowsTransparency="True"
                   PopupAnimation="Fade"
                   Placement="Top"
                   PlacementTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}"
                   PlacementRectangle="0,-5,0,0" >
                <!-- Used to reposition Popup when dialog moves or resizes -->
                <Popup.Style>
                    <Style TargetType="{x:Type Popup}">
                        <Style.Triggers>
                            <!-- Shows Popup when TextBox has focus -->
                            <DataTrigger Binding="{Binding AdornedElement.IsFocused, ElementName=adorner}"
                           Value="True">
                                <Setter Property="IsOpen" Value="True"/>
                            </DataTrigger>
                            <!-- Shows Popup when mouse hovers over ToolTipCorner -->
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=toolTipCorner}"
                           Value="True">
                                <Setter Property="IsOpen" Value="True"/>
                            </DataTrigger>
                            <!-- Hides Popup when window is no longer active -->
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                           Value="False">
                                <Setter Property="IsOpen" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Popup.Style>
                <Border x:Name="errorBorder"
                            Background="#FFDC000C"
                            Margin="0,0,8,8"
                            Opacity="1"
                            CornerRadius="2"
                            MinHeight="21"
                            MaxWidth="267" IsHitTestVisible="False">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2"
                              Color="Black"
                              Opacity="0.6"
                              Direction="315"
                              BlurRadius="4"/>
                    </Border.Effect>
                    <TextBlock Text="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"
                     Foreground="White"
                     Margin="8,3,8,3"
                     TextWrapping="Wrap"/>
                </Border>
            </Popup>
        </StackPanel>
    </ControlTemplate>
    <Style x:Key="TextErrorStyle" TargetType="TextBox"  BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ErrorTemplateSilverlightStyle}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource vermelho}" />
                <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource vermelho}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="btnSalvarVeiculoErrorStyle" TargetType="Button" BasedOn="{StaticResource MetroButton}">
        <Setter Property="IsEnabled" Value="False"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtPlaca}" Value="False"/>
                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtTara}" Value="False"/>
                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtCapacidade}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <x:Array Type="sys:String" x:Key="UF" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib">
        <sys:String>AC</sys:String>
        <sys:String>AL</sys:String>
        <sys:String>AP</sys:String>
        <sys:String>AM</sys:String>
        <sys:String>BA</sys:String>
        <sys:String>CE</sys:String>
        <sys:String>DF</sys:String>
        <sys:String>ES</sys:String>
        <sys:String>GO</sys:String>
        <sys:String>MA</sys:String>
        <sys:String>MT</sys:String>
        <sys:String>MS</sys:String>
        <sys:String>MG</sys:String>
        <sys:String>PA</sys:String>
        <sys:String>PB</sys:String>
        <sys:String>PR</sys:String>
        <sys:String>PE</sys:String>
        <sys:String>PI</sys:String>
        <sys:String>RJ</sys:String>
        <sys:String>RN</sys:String>
        <sys:String>RS</sys:String>
        <sys:String>RO</sys:String>
        <sys:String>RR</sys:String>
        <sys:String>SC</sys:String>
        <sys:String>SP</sys:String>
        <sys:String>SE</sys:String>
        <sys:String>TO</sys:String>
    </x:Array>

</ResourceDictionary>